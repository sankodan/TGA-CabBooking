# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values

workflows:
    react-native-android:
        name: React Native Android
        # working_directory: packages/mobileapp
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            groups:
            # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
                - keystore_credentials # <-- (Includes CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS_PASSWORD, CM_KEY_ALIAS_USERNAME)
                  # CM_KEYSTORE <-- Put your keystore file here
                  # CM_KEYSTORE_PASSWORD <-- Put your keystore password here
                  # CM_KEY_ALIAS_PASSWORD <-- Put your keystore alias password here
                  # CM_KEY_ALIAS_USERNAME <-- Put your keystore alias username here
                - google_play_credentials # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS <-- Put your google-services.json)
            vars:
                PACKAGE_NAME: "com.sapient.tga.mobileapp" # <-- Put your package name here e.g. com.domain.myapp
            node: v16.11.1
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: feature-
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                yarn install
            - name: Tests                
              script: yarn test
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/packages/mobileapp/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
                    cat >> "$CM_BUILD_DIR/packages/mobileapp/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd packages/mobileapp/android && ./gradlew clean app:bundleRelease -x bundleReleaseJsAndAssets
        artifacts:
            - packages/mobileapp/android/app/build/outputs/**/*.aab
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - sandeep23kodan@gmail.com
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
              track: internal   # Any default or custom track that is not in ‘draft’ status
              submit_as_draft: true
              # in_app_update_priority: 3 # Optional Priority of the release (only set if in-app updates are supported): integer in range [0, 5]
              # rollout_fraction: 0.25 # Optional. Rollout fraction (set only if releasing to a fraction of users): value between (0, 1)
              # changes_not_sent_for_review: true # Optional boolean To be used ONLY if your app cannot be sent for review automatically *
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            groups:
            # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
                # - app_store_credentials # <-- (Includes  APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
                  # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
                  # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
                  # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
                  # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                  # https://appstoreconnect.apple.com/access/api
                - certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
            vars:
                XCODE_WORKSPACE: "mobileapp.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "mobileapp" # <-- Put the name of your Xcode scheme here
                BUNDLE_ID: "com.sapient.tga.mobileapp" # <-- Put your Bundle Id here e.g com.domain.myapp
                # APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
            node: v16.11.1
            xcode: 12.5
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                yarn install
            - name: Install CocoaPods dependencies
              script: |
                cd packages/mobileapp/ios && pod install
            - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
              script: keychain initialize
            - name: Set up Provisioning profiles from environment variables
              script: |
                PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
                mkdir -p "$PROFILES_HOME"
                PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
                echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
                echo "Saved provisioning profile $PROFILE_PATH"      
            - name: Set up signing certificate
              script: |
                echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
                if [ -z ${CM_CERTIFICATE_PASSWORD+x} ]; then
                  # when using a certificate that is not password-protected
                  keychain add-certificates --certificate /tmp/certificate.p12
                else
                  # when using a password-protected certificate
                  keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
                fi 
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/packages/mobileapp/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        # publishing:
        #   # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        #   email:
        #     recipients:
        #       - user_1@example.com
        #       - user_2@example.com
        #     notify:
        #       success: true     # To not receive a notification when a build succeeds
        #       failure: false    # To not receive a notification when a build fails
        #   slack: 
        #     # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        #     channel: '#channel-name'
        #     notify_on_build_start: true   # To receive a notification when a build starts
        #     notify:
        #       success: true               # To not receive a notification when a build succeeds
        #       failure: false              # To not receive a notification when a build fails
        #   app_store_connect:                 
        #     api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
        #     key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
        #     issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
        #     submit_to_testflight: false                     # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
        #     # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review. 
        #     #      - group name 1
        #     #      - group name 2  